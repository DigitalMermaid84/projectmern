// Import dependencies
const port = 4000;
const express = require("express");
const app = express();
const mongoose = require("mongoose");
const jwt = require("jsonwebtoken");
const multer = require("multer");
const path = require("path");
const cors = require("cors");
const fs = require("fs");

// Middleware
app.use(express.json());
app.use(cors());

// Ensure upload directory exists
const uploadDir = "./upload/images";
if (!fs.existsSync(uploadDir)) {
    fs.mkdirSync(uploadDir, { recursive: true });
}

// MongoDB Connection
mongoose
    .connect("mongodb+srv://lyndakelechi0:Kaycee505@cluster0.vv05n.mongodb.net/e-commerce")
    .then(() => console.log("✅ MongoDB Connected"))
    .catch((error) => console.error("❌ MongoDB Connection Error:", error));

// Default Route
app.get("/", (req, res) => {
    res.send("🚀 Express App is Running");
});

// Multer Storage Configuration
const storage = multer.diskStorage({
    destination: "./upload/images",
    filename: function (req, file, cb) {
        cb(null, `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`);
    },
});

const upload = multer({ storage: storage });

// Serve uploaded images
app.use("/images", express.static("upload/images"));

// Image Upload Endpoint
app.post("/upload", (req, res) => {
    upload.single("product")(req, res, (err) => {
        if (err) {
            return res.status(500).json({ success: 0, error: err.message });
        }
        res.json({
            success: 1,
            image_url: `http://localhost:${port}/images/${req.file.filename}`,
        });
    });
});

// Product Schema (✅ Fixed errors)
const productSchema = new mongoose.Schema({
    id: { type: Number, required: true },
    name: { type: String, required: true },
    image: { type: String, required: true },
    category: { type: String, required: true },
    new_price: { type: Number, required: true },
    old_price: { type: Number, required: true },
    date: { type: Date, default: Date.now },
    available: { type: Boolean, default: true },
});

const Product = mongoose.model("Product", productSchema);

// Add Product API (✅ Fixed error handling)
app.post("/addproduct", async (req, res) => {
    try {
        const product = new Product({
            id: req.body.id,
            name: req.body.name,
            image: req.body.image,
            category: req.body.category,
            new_price: req.body.new_price,
            old_price: req.body.old_price,
        });

        await product.save();
        res.json({ success: true, name: req.body.name });

    } catch (error) {
        console.error("❌ Error saving product:", error);
        res.status(500).json({ success: false, error: "Internal Server Error" });
    }
});

// Handle Unknown Routes
app.use((req, res) => {
    res.status(404).json({ error: "Route Not Found" });
});

// Start Server
app.listen(port, (error) => {
    if (!error) {
        console.log(`🚀 Server is running on port ${port}`);
    } else {
        console.log("❌ Error:", error);
    }
});
