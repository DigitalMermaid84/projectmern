{"ast":null,"code":"var _jsxFileName = \"/Users/kahlessi/Desktop/PersonalProject/E-commerce/frontend/src/Context/ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\n\n// Create ShopContext using createContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext();\n\n// Retrieve saved cart from localStorage or set default\nconst getDefaultCart = () => {\n  const savedCart = localStorage.getItem(\"cartItems\");\n  if (savedCart) {\n    return JSON.parse(savedCart);\n  }\n  return {}; // Empty cart initially\n};\n\n// ShopContextProvider component\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [authToken, setAuthToken] = useState(localStorage.getItem(\"auth-token\"));\n\n  // âœ… Update `authToken` when it changes in localStorage\n  useEffect(() => {\n    const token = localStorage.getItem(\"auth-token\");\n    setAuthToken(token);\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/allproduct\").then(response => response.json()).then(data => setAll_Product(data));\n    if (authToken) {\n      fetch(\"http://localhost:4000/getcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": authToken,\n          \"Content-Type\": \"application/json\"\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    } else {\n      setCartItems({}); // ğŸ”¥ Clear cart when user logs out\n    }\n  }, [authToken]); // âœ… Fix: Auth token tracking\n\n  // âœ… Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // âœ… Function to update auth token (for login/logout)\n  const updateAuthToken = token => {\n    setAuthToken(token);\n    if (token) {\n      localStorage.setItem(\"auth-token\", token);\n    } else {\n      localStorage.removeItem(\"auth-token\");\n      setCartItems({}); // âœ… Clear cart when logging out\n    }\n  };\n\n  // âœ… Add to cart function\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n    if (authToken) {\n      fetch(\"http://localhost:4000/addtocart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": authToken,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n\n  // âœ… Remove from cart function\n  const removeFromCart = itemId => {\n    setCartItems(prev => {\n      const updatedCart = {\n        ...prev\n      };\n      if (updatedCart[itemId] > 0) {\n        updatedCart[itemId] -= 1;\n      }\n      return updatedCart;\n    });\n    if (authToken) {\n      fetch(\"http://localhost:4000/removefromcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": authToken,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n\n  // âœ… Clear cart after checkout\n  const clearCart = () => {\n    setCartItems({});\n    localStorage.removeItem(\"cartItems\"); // Remove from localStorage\n\n    if (authToken) {\n      fetch(\"http://localhost:4000/clearcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": authToken,\n          \"Content-Type\": \"application/json\"\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => console.log(\"ğŸ›’ Cart Cleared:\", data));\n    }\n  };\n\n  // âœ… Get total cart amount\n  const getTotalCartAmount = () => {\n    return Object.keys(cartItems).reduce((total, itemId) => {\n      const itemInfo = all_product.find(product => product.id === Number(itemId));\n      return total + ((itemInfo === null || itemInfo === void 0 ? void 0 : itemInfo.new_price) || 0) * cartItems[itemId];\n    }, 0);\n  };\n\n  // âœ… Get total number of items in cart\n  const getTotalCartItems = () => {\n    return Object.values(cartItems).reduce((total, quantity) => total + quantity, 0);\n  };\n\n  // âœ… Provide all state and functions\n  const contextValue = {\n    all_product,\n    cartItems,\n    setCartItems,\n    addToCart,\n    removeFromCart,\n    clearCart,\n    getTotalCartAmount,\n    getTotalCartItems,\n    updateAuthToken // âœ… Now available to update token\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 12\n  }, this);\n};\n_s(ShopContextProvider, \"RPl+Q6L41Wuc039ruxSCDG0Viu4=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","savedCart","localStorage","getItem","JSON","parse","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","authToken","setAuthToken","token","fetch","then","response","json","data","method","headers","Accept","body","setItem","stringify","updateAuthToken","removeItem","addToCart","itemId","prev","console","log","removeFromCart","updatedCart","clearCart","getTotalCartAmount","Object","keys","reduce","total","itemInfo","find","product","id","Number","new_price","getTotalCartItems","values","quantity","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kahlessi/Desktop/PersonalProject/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\n// Create ShopContext using createContext\nexport const ShopContext = createContext();\n\n// Retrieve saved cart from localStorage or set default\nconst getDefaultCart = () => {\n    const savedCart = localStorage.getItem(\"cartItems\");\n\n    if (savedCart) {\n        return JSON.parse(savedCart);\n    }\n\n    return {}; // Empty cart initially\n};\n\n// ShopContextProvider component\nconst ShopContextProvider = (props) => {\n    const [all_product, setAll_Product] = useState([]);\n    const [cartItems, setCartItems] = useState(getDefaultCart());\n    const [authToken, setAuthToken] = useState(localStorage.getItem(\"auth-token\"));\n\n    // âœ… Update `authToken` when it changes in localStorage\n    useEffect(() => {\n        const token = localStorage.getItem(\"auth-token\");\n        setAuthToken(token);\n    }, []);\n\n    useEffect(() => {\n        fetch(\"http://localhost:4000/allproduct\")\n            .then((response) => response.json())\n            .then((data) => setAll_Product(data));\n\n        if (authToken) {\n            fetch(\"http://localhost:4000/getcart\", {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/form-data\",\n                    \"auth-token\": authToken,\n                    \"Content-Type\": \"application/json\",\n                },\n                body: \"\",\n            })\n            .then((response) => response.json())\n            .then((data) => setCartItems(data));\n        } else {\n            setCartItems({}); // ğŸ”¥ Clear cart when user logs out\n        }\n    }, [authToken]); // âœ… Fix: Auth token tracking\n\n    // âœ… Save cart to localStorage whenever it changes\n    useEffect(() => {\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    }, [cartItems]);\n\n    // âœ… Function to update auth token (for login/logout)\n    const updateAuthToken = (token) => {\n        setAuthToken(token);\n        if (token) {\n            localStorage.setItem(\"auth-token\", token);\n        } else {\n            localStorage.removeItem(\"auth-token\");\n            setCartItems({}); // âœ… Clear cart when logging out\n        }\n    };\n\n    // âœ… Add to cart function\n    const addToCart = (itemId) => {\n        setCartItems((prev) => ({\n            ...prev,\n            [itemId]: (prev[itemId] || 0) + 1,\n        }));\n\n        if (authToken) {\n            fetch(\"http://localhost:4000/addtocart\", {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/form-data\",\n                    \"auth-token\": authToken,\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ itemId }),\n            })\n            .then((response) => response.json())\n            .then((data) => console.log(data));\n        }\n    };\n\n    // âœ… Remove from cart function\n    const removeFromCart = (itemId) => {\n        setCartItems((prev) => {\n            const updatedCart = { ...prev };\n            if (updatedCart[itemId] > 0) {\n                updatedCart[itemId] -= 1;\n            }\n            return updatedCart;\n        });\n\n        if (authToken) {\n            fetch(\"http://localhost:4000/removefromcart\", {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/form-data\",\n                    \"auth-token\": authToken,\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ itemId }),\n            })\n            .then((response) => response.json())\n            .then((data) => console.log(data));\n        }\n    };\n\n    // âœ… Clear cart after checkout\n    const clearCart = () => {\n        setCartItems({});\n        localStorage.removeItem(\"cartItems\"); // Remove from localStorage\n\n        if (authToken) {\n            fetch(\"http://localhost:4000/clearcart\", {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/form-data\",\n                    \"auth-token\": authToken,\n                    \"Content-Type\": \"application/json\",\n                },\n                body: \"\",\n            })\n            .then((response) => response.json())\n            .then((data) => console.log(\"ğŸ›’ Cart Cleared:\", data));\n        }\n    };\n\n    // âœ… Get total cart amount\n    const getTotalCartAmount = () => {\n        return Object.keys(cartItems).reduce((total, itemId) => {\n            const itemInfo = all_product.find((product) => product.id === Number(itemId));\n            return total + (itemInfo?.new_price || 0) * cartItems[itemId];\n        }, 0);\n    };\n\n    // âœ… Get total number of items in cart\n    const getTotalCartItems = () => {\n        return Object.values(cartItems).reduce((total, quantity) => total + quantity, 0);\n    };\n\n    // âœ… Provide all state and functions\n    const contextValue = {\n        all_product,\n        cartItems,\n        setCartItems,\n        addToCart,\n        removeFromCart,\n        clearCart,\n        getTotalCartAmount,\n        getTotalCartItems,\n        updateAuthToken, // âœ… Now available to update token\n    };\n\n    return <ShopContext.Provider value={contextValue}>{props.children}</ShopContext.Provider>;\n};\n\nexport default ShopContextProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}